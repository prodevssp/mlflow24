{"version":3,"file":"development.js","sources":["../src/development/ChatUI/ChatInput.tsx","../src/development/ChatUI/CodeSnippet.tsx","../src/development/ChatUI/Feedback.tsx","../src/development/ChatUI/Message.tsx","../src/development/ChatUI/MessageActionButton.tsx","../src/development/ChatUI/MessageBody.tsx","../src/development/ChatUI/MessageHeader.tsx","../src/development/ChatUI/MessagePagination.tsx","../src/development/ChatUI/index.tsx","../src/development/SkeletonV2/GenericSkeleton.tsx","../src/development/SkeletonV2/ParagraphSkeleton.tsx","../src/development/SkeletonV2/TitleSkeleton.tsx","../src/development/Slider/Slider.tsx"],"sourcesContent":["import { css } from '@emotion/react';\nimport React from 'react';\n\nimport { Button } from '../../design-system/Button';\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { CursorIcon } from '../../design-system/Icon';\nimport { Input } from '../../design-system/Input';\nimport type { TextAreaProps } from '../../design-system/Input';\n\ntype ChatInputProps = {\n  className?: string;\n  textAreaProps?: TextAreaProps;\n  onSubmit?: (value: string) => void;\n  suggestionButtons?: React.ReactNode;\n};\n\nconst chatInputStyles = {\n  container: css({\n    backgroundColor: 'var(--background-primary)',\n    padding: 'var(--spacing-sm)',\n    position: 'relative',\n  }),\n\n  suggestionButtons: css({\n    display: 'flex',\n    gap: 'var(--spacing-sm)',\n    marginBottom: 'var(--spacing-sm)',\n  }),\n\n  textArea: css({\n    minWidth: '100%',\n    maxHeight: '150px !important',\n  }),\n\n  button: css({\n    position: 'absolute',\n    bottom: 'calc(var(--spacing-sm) + 4px)',\n    right: 'calc(var(--spacing-sm) + 4px)',\n    // Flip horizontally; the existing icon points to the left but this should be pointing to the right.\n    transform: 'scaleX(-1)',\n  }),\n};\n\nexport const ChatInput = ({ className, onSubmit, textAreaProps, suggestionButtons }: ChatInputProps) => {\n  const { theme } = useDesignSystemTheme();\n  const [value, setValue] = React.useState('');\n\n  const handleSubmit = () => {\n    if (!value) {\n      return;\n    }\n\n    onSubmit?.(value);\n    setValue('');\n  };\n\n  return (\n    <div\n      css={chatInputStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--background-primary' as string]: theme.colors.backgroundPrimary,\n        ['--border-decorative' as string]: theme.colors.borderDecorative,\n      }}\n      className={className}\n    >\n      {suggestionButtons && <div css={chatInputStyles.suggestionButtons}>{suggestionButtons}</div>}\n\n      <Input.TextArea\n        autoSize\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        placeholder=\"Send a message\"\n        css={chatInputStyles.textArea}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter' && !e.metaKey && !e.ctrlKey && !e.shiftKey) {\n            e.preventDefault();\n            handleSubmit();\n          }\n        }}\n        {...textAreaProps}\n      />\n      <Button size=\"small\" css={chatInputStyles.button} icon={<CursorIcon />} onClick={handleSubmit} />\n    </div>\n  );\n};\n\nexport default ChatInput;\n","import { css } from '@emotion/react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\n\ntype CodeSnippetProps = {\n  language: string;\n  buttons: React.ReactNode;\n  children: React.ReactNode;\n};\n\nconst snippetStyles = {\n  container: css({\n    margin: 'var(--spacing-md) 0',\n  }),\n\n  header: css({\n    backgroundColor: 'var(--color-grey700)',\n    color: 'var(--color-grey300)',\n    borderRadius: 'var(--border-radius) var(--border-radius) 0 0',\n    padding: 'var(--spacing-sm) var(--spacing-sm) var(--spacing-sm) var(--spacing-md)',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  }),\n\n  buttonSvg: css({\n    svg: {\n      color: 'var(--color-grey300)',\n    },\n  }),\n\n  code: css({\n    padding: 'var(--spacing-sm) var(--spacing-md)',\n    margin: '0',\n    borderRadius: '0 0 var(--border-radius) var(--border-radius)',\n    backgroundColor: 'var(--color-grey800)',\n    color: 'var(--color-grey300)',\n  }),\n};\n\nexport const CodeSnippet = ({ language, buttons, children }: CodeSnippetProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <div\n      css={snippetStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--spacing-md' as string]: `${theme.spacing.md}px`,\n        ['--border-radius' as string]: `${theme.general.borderRadiusBase}px`,\n        ['--color-grey700' as string]: theme.colors.grey700,\n        ['--color-grey300' as string]: theme.colors.grey300,\n        ['--color-grey800' as string]: theme.colors.grey800,\n      }}\n    >\n      <div css={snippetStyles.header}>\n        <span>{language}</span>\n        <div css={snippetStyles.buttonSvg}>{buttons}</div>\n      </div>\n      <pre css={snippetStyles.code}>{children}</pre>\n    </div>\n  );\n};\n\nexport default CodeSnippet;\n","import { css } from '@emotion/react';\nimport { useState } from 'react';\n\nimport { Button } from '../../design-system/Button';\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { CloseIcon, FaceFrownIcon, FaceNeutralIcon, FaceSmileIcon } from '../../design-system/Icon';\nimport { Typography } from '../../design-system/Typography';\n\ntype FeedbackProps = {\n  onFeedback: (feedback: 'Better' | 'Same' | 'Worse') => void;\n};\n\nconst feedbackStyles = {\n  container: css({\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n  }),\n\n  feedbackPrompt: css({\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 'var(--spacing-sm)',\n  }),\n\n  feedbackOptions: css({\n    display: 'flex',\n    gap: 'var(--spacing-sm)',\n  }),\n};\n\nexport const Feedback = ({ onFeedback }: FeedbackProps) => {\n  const [isVisible, setIsVisible] = useState(true);\n  const { theme } = useDesignSystemTheme();\n\n  if (!isVisible) {\n    return null;\n  }\n\n  return (\n    <div\n      css={feedbackStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--text-secondary' as string]: theme.colors.textSecondary,\n      }}\n    >\n      <div css={feedbackStyles.feedbackPrompt}>\n        <Typography.Text\n          style={{\n            color: theme.colors.textSecondary,\n          }}\n        >\n          Was this response:\n        </Typography.Text>\n        <div css={feedbackStyles.feedbackOptions}>\n          <Button\n            icon={<FaceSmileIcon />}\n            onClick={() => {\n              onFeedback('Better');\n              setIsVisible(false);\n            }}\n          >\n            Better\n          </Button>\n          <Button\n            icon={<FaceNeutralIcon />}\n            onClick={() => {\n              onFeedback('Same');\n              setIsVisible(false);\n            }}\n          >\n            Same\n          </Button>\n          <Button\n            icon={<FaceFrownIcon />}\n            onClick={() => {\n              onFeedback('Worse');\n              setIsVisible(false);\n            }}\n          >\n            Worse\n          </Button>\n        </div>\n      </div>\n      <Button icon={<CloseIcon />} onClick={() => setIsVisible(false)} />\n    </div>\n  );\n};\n\nexport default Feedback;\n","import { css } from '@emotion/react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\n\ntype MessageProps = {\n  isActiveUser: boolean;\n  children: React.ReactNode;\n};\n\nconst messageStyles = {\n  container: css({\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 'var(--spacing-sm)',\n    paddingTop: 'var(--spacing-md)',\n    paddingRight: 'var(--spacing-sm)',\n    paddingBottom: 'var(--spacing-md)',\n    paddingLeft: 'calc(var(--spacing-md) * 2)',\n    backgroundColor: 'var(--background)',\n    borderBottom: `1px solid var(--border-decorative)`,\n  }),\n};\n\nexport const Message = ({ isActiveUser, children }: MessageProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <div\n      css={messageStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--spacing-md' as string]: `${theme.spacing.md}px`,\n        ['--background' as string]: isActiveUser ? theme.colors.backgroundPrimary : theme.colors.backgroundSecondary,\n        ['--border-decorative' as string]: theme.colors.borderDecorative,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Message;\n","import { css } from '@emotion/react';\nimport { useEffect, useState } from 'react';\n\nimport type { ButtonProps } from '../../design-system/Button';\nimport { Button } from '../../design-system/Button';\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { CheckIcon } from '../../design-system/Icon';\n\nconst buttonStyles = {\n  container: css({\n    position: 'relative',\n    display: 'inline-block',\n    width: 'max-content',\n  }),\n  checkIcon: css({\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    pointerEvents: 'none',\n\n    svg: {\n      color: 'var(--checkmark-color)',\n    },\n  }),\n};\n\nconst MessageActionButton = (props: ButtonProps) => {\n  const [showCheck, setShowCheck] = useState(false);\n  const { theme } = useDesignSystemTheme();\n\n  const handleClick = (e: React.MouseEvent<HTMLElement>) => {\n    setShowCheck(true);\n    props.onClick?.(e);\n  };\n\n  if (props.children) {\n    throw new Error('MessageActionButton: Children not supported; use as icon-only button.');\n  }\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n    if (showCheck) {\n      timeoutId = setTimeout(() => {\n        setShowCheck(false);\n      }, 750);\n    }\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [showCheck]);\n\n  return (\n    <span\n      css={buttonStyles.container}\n      style={{\n        ['--checkmark-color' as string]: theme.colors.green500,\n      }}\n    >\n      <Button\n        size=\"small\"\n        {...props}\n        onClick={handleClick}\n        css={{\n          svg: {\n            transition: showCheck ? 'none' : 'opacity 350ms',\n            opacity: showCheck ? '0' : '1',\n          },\n        }}\n      />\n      <CheckIcon\n        css={buttonStyles.checkIcon}\n        style={{\n          transition: showCheck ? 'none' : 'opacity 350ms',\n          opacity: showCheck ? '1' : '0',\n        }}\n      />\n    </span>\n  );\n};\n\nexport default MessageActionButton;\n","import { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\n\ntype MessageBodyProps = {\n  children: React.ReactNode;\n};\n\nconst MessageBody = ({ children }: MessageBodyProps) => {\n  const { getPrefixedClassName } = useDesignSystemTheme();\n\n  const typographyClassname = getPrefixedClassName('typography');\n\n  return (\n    <div\n      css={{\n        [`& .${typographyClassname}:last-of-type`]: {\n          marginBottom: 0,\n        },\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default MessageBody;\n","import { css } from '@emotion/react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { Typography } from '../../design-system/Typography';\n\ntype MessageHeaderProps = {\n  userName: React.ReactNode;\n  avatarURL?: string;\n  leftContent?: React.ReactNode;\n  rightContent?: React.ReactNode;\n};\n\nconst headerStyles = {\n  container: css({\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    position: 'relative',\n  }),\n\n  leftContent: css({\n    display: 'flex',\n    alignItems: 'center',\n    gap: 'var(--spacing-sm)',\n  }),\n\n  rightContent: css({\n    display: 'flex',\n    alignItems: 'center',\n  }),\n\n  avatar: css({\n    position: 'absolute',\n    left: -22,\n    top: 2,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    width: 'var(--spacing-md)',\n    height: 'var(--spacing-md)',\n    borderRadius: '50%',\n  }),\n};\n\nconst MessageHeader = ({ userName, avatarURL, leftContent, rightContent }: MessageHeaderProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <div\n      css={headerStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--spacing-md' as string]: `${theme.spacing.md}px`,\n      }}\n    >\n      <div css={headerStyles.leftContent}>\n        <div\n          css={headerStyles.avatar}\n          style={{\n            backgroundImage: `url(${avatarURL}), linear-gradient(180deg, #FFD983 0%, #FFB800 100%)`,\n          }}\n        />\n        <Typography.Text bold>{userName}</Typography.Text>\n        {leftContent}\n      </div>\n      <div css={headerStyles.rightContent}>{rightContent}</div>\n    </div>\n  );\n};\n\nexport default MessageHeader;\n","import { css } from '@emotion/react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { ChevronLeftIcon, ChevronRightIcon } from '../../design-system/Icon';\nimport { Typography } from '../../design-system/Typography';\n\ntype PaginationProps = {\n  onPrevious: () => void;\n  onNext: () => void;\n  current: number;\n  total: number;\n};\n\nconst paginationStyles = {\n  container: css({\n    display: 'flex',\n    alignItems: 'center',\n    justifyItems: 'center',\n    gap: 'var(--spacing-sm)',\n  }),\n\n  button: css({\n    border: 'none',\n    backgroundColor: 'transparent',\n    padding: 0,\n    display: 'flex',\n    height: 'var(--spacing-md)',\n    alignItems: 'center',\n  }),\n};\n\nexport const MessagePagination = ({ onPrevious, onNext, current, total }: PaginationProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <div\n      css={paginationStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--spacing-md' as string]: `${theme.spacing.md}px`,\n      }}\n    >\n      <button\n        css={paginationStyles.button}\n        onClick={onPrevious}\n        style={{\n          color: current === 1 ? theme.colors.actionDisabledText : theme.colors.textSecondary,\n          cursor: current === 1 ? 'arrow' : 'pointer',\n        }}\n      >\n        <ChevronLeftIcon />\n      </button>\n      <Typography.Text\n        style={{\n          color: theme.colors.textSecondary,\n        }}\n      >{`${current}/${total}`}</Typography.Text>\n      <button\n        css={paginationStyles.button}\n        onClick={onNext}\n        style={{\n          color: current === total ? theme.colors.actionDisabledText : theme.colors.textSecondary,\n          cursor: current === total ? 'arrow' : 'pointer',\n        }}\n      >\n        <ChevronRightIcon />\n      </button>\n    </div>\n  );\n};\n\nexport default MessagePagination;\n","import ChatInput from './ChatInput';\nimport CodeSnippet from './CodeSnippet';\nimport Feedback from './Feedback';\nimport Message from './Message';\nimport MessageActionButton from './MessageActionButton';\nimport MessageBody from './MessageBody';\nimport MessageHeader from './MessageHeader';\nimport MessagePagination from './MessagePagination';\n\nexport const ChatUI = {\n  MessageActionButton,\n  MessageHeader,\n  MessageBody,\n  MessagePagination,\n  Message,\n  Feedback,\n  CodeSnippet,\n  ChatInput,\n};\n","import { css } from '@emotion/react';\nimport type { CSSProperties } from 'react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks';\nimport { visuallyHidden } from '../../design-system/utils';\nimport { genSkeletonAnimatedColor } from './utils';\n\ninterface GenericSkeletonProps {\n  /** Label for screen readers */\n  label?: React.ReactNode;\n  /** fps for animation. Default is 60 fps. A lower number will use less resources. */\n  frameRate?: number;\n  /** Style property */\n  style?: CSSProperties;\n}\n\nconst GenericContainerStyles = css({\n  cursor: 'progress',\n  borderRadius: 'var(--border-radius)',\n});\n\nexport const GenericSkeleton = ({ label, frameRate = 60, style }: GenericSkeletonProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <div\n      css={[GenericContainerStyles, genSkeletonAnimatedColor(theme, frameRate)]}\n      style={{\n        ...style,\n        ['--border-radius' as any]: `${theme.general.borderRadiusBase}px`,\n      }}\n    >\n      <span css={visuallyHidden}>{label}</span>\n    </div>\n  );\n};\n","import { css } from '@emotion/react';\nimport type { CSSProperties } from 'react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks';\nimport { visuallyHidden } from '../../design-system/utils';\nimport { getOffsets, genSkeletonAnimatedColor } from './utils';\n\ninterface ParagraphSkeletonProps {\n  /** Label for screen readers */\n  label?: React.ReactNode;\n  /** Seed that deterministically arranges the uneven lines, so that they look like ragged text.\n   * If you don't provide this (or give each skeleton the same seed) they will all look the same. */\n  seed?: string;\n  /** fps for animation. Default is 60 fps. A lower number will use less resources. */\n  frameRate?: number;\n  /** Style property */\n  style?: CSSProperties;\n}\n\nconst paragraphContainerStyles = css({\n  cursor: 'progress',\n  width: '100%',\n  height: 20,\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n});\n\nconst paragraphFillStyles = css({\n  borderRadius: 'var(--border-radius)',\n  height: 8,\n});\n\nexport const ParagraphSkeleton = ({ label, seed = '', frameRate = 60, style }: ParagraphSkeletonProps) => {\n  const { theme } = useDesignSystemTheme();\n  const offsetWidth = getOffsets(seed)[0];\n\n  return (\n    <div\n      css={paragraphContainerStyles}\n      style={{\n        ...style,\n        ['--border-radius' as any]: `${theme.general.borderRadiusBase}px`,\n      }}\n    >\n      <span css={visuallyHidden}>{label}</span>\n      <div\n        aria-hidden\n        css={[\n          paragraphFillStyles,\n          genSkeletonAnimatedColor(theme, frameRate),\n          { width: `calc(100% - ${offsetWidth}px)` },\n        ]}\n      />\n    </div>\n  );\n};\n","import { css } from '@emotion/react';\nimport type { CSSProperties } from 'react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks';\nimport { visuallyHidden } from '../../design-system/utils';\nimport { genSkeletonAnimatedColor } from './utils';\n\ninterface TitleSkeletonProps {\n  /** Label for screen readers */\n  label?: React.ReactNode;\n  /** fps for animation. Default is 60 fps. A lower number will use less resources. */\n  frameRate?: number;\n  /** Style property */\n  style?: CSSProperties;\n}\n\nconst titleContainerStyles = css({\n  cursor: 'progress',\n  width: '100%',\n  height: 28,\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n});\n\nconst titleFillStyles = css({\n  borderRadius: 'var(--border-radius)',\n  height: 12,\n  width: '100%',\n});\n\nexport const TitleSkeleton = ({ label, frameRate = 60, style }: TitleSkeletonProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <div\n      css={titleContainerStyles}\n      style={{\n        ...style,\n        ['--border-radius' as any]: `${theme.general.borderRadiusBase}px`,\n      }}\n    >\n      <span css={visuallyHidden}>{label}</span>\n      <div aria-hidden css={[titleFillStyles, genSkeletonAnimatedColor(theme, frameRate)]} />\n    </div>\n  );\n};\n","import { css } from '@emotion/react';\nimport * as RadixSlider from '@radix-ui/react-slider';\nimport { forwardRef } from 'react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks';\nimport type { Theme } from '../../theme';\n\nexport type SliderRootProps = Omit<RadixSlider.SliderProps, 'orientation'>;\nexport type SliderTrackProps = RadixSlider.SliderTrackProps;\nexport type SliderRangeProps = RadixSlider.SliderRangeProps;\nexport type SliderThumbProps = RadixSlider.SliderThumbProps;\n\nconst getRootStyles = () => {\n  return css({\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n\n    '&[data-orientation=\"vertical\"]': {\n      flexDirection: 'column',\n      width: 20,\n      height: 100,\n    },\n\n    '&[data-orientation=\"horizontal\"]': {\n      height: 20,\n      width: 200,\n    },\n  });\n};\n\nexport const Root = forwardRef<HTMLElement, SliderRootProps>((props: SliderRootProps, ref): JSX.Element => {\n  return <RadixSlider.Root css={getRootStyles()} {...props} ref={ref} />;\n});\n\nconst getTrackStyles = (theme: Theme) => {\n  return css({\n    backgroundColor: theme.colors.grey100,\n    position: 'relative',\n    flexGrow: 1,\n    borderRadius: 9999,\n\n    '&[data-orientation=\"vertical\"]': {\n      width: 3,\n    },\n\n    '&[data-orientation=\"horizontal\"]': {\n      height: 3,\n    },\n  });\n};\n\nexport const Track = forwardRef<HTMLElement, SliderTrackProps>((props: SliderTrackProps, ref): JSX.Element => {\n  const { theme } = useDesignSystemTheme();\n\n  return <RadixSlider.Track css={getTrackStyles(theme)} {...props} ref={ref} />;\n});\n\nconst getRangeStyles = (theme: Theme) => {\n  return css({\n    backgroundColor: theme.colors.primary,\n    position: 'absolute',\n    borderRadius: 9999,\n    height: '100%',\n\n    '&[data-disabled]': {\n      backgroundColor: theme.colors.grey100,\n    },\n  });\n};\n\nexport const Range = forwardRef<HTMLElement, SliderRangeProps>((props: SliderRangeProps, ref): JSX.Element => {\n  const { theme } = useDesignSystemTheme();\n\n  return <RadixSlider.Range css={getRangeStyles(theme)} {...props} ref={ref} />;\n});\n\nconst getThumbStyles = (theme: Theme) => {\n  return css({\n    display: 'block',\n    width: 20,\n    height: 20,\n    backgroundColor: theme.colors.actionPrimaryBackgroundDefault,\n    boxShadow: `0 2px 4px 0 ${theme.colors.grey400}`,\n    borderRadius: 10,\n    outline: 'none',\n\n    '&:hover': {\n      backgroundColor: theme.colors.actionPrimaryBackgroundHover,\n    },\n\n    '&:focus': {\n      backgroundColor: theme.colors.actionPrimaryBackgroundPress,\n    },\n\n    '&[data-disabled]': {\n      backgroundColor: theme.colors.grey200,\n      boxShadow: 'none',\n    },\n  });\n};\n\nexport const Thumb = forwardRef<HTMLElement, SliderThumbProps>((props: SliderThumbProps, ref): JSX.Element => {\n  const { theme } = useDesignSystemTheme();\n\n  return <RadixSlider.Thumb css={getThumbStyles(theme)} {...props} ref={ref} />;\n});\n"],"names":["chatInputStyles","container","process","env","NODE_ENV","name","styles","toString","_EMOTION_STRINGIFIED_CSS_ERROR__","suggestionButtons","textArea","button","ChatInput","_ref","className","onSubmit","textAreaProps","theme","useDesignSystemTheme","value","setValue","React","useState","handleSubmit","_jsxs","css","style","spacing","sm","colors","backgroundPrimary","borderDecorative","children","_jsx","Input","TextArea","autoSize","onChange","e","target","placeholder","onKeyDown","key","metaKey","ctrlKey","shiftKey","preventDefault","Button","size","icon","CursorIcon","onClick","snippetStyles","header","buttonSvg","code","CodeSnippet","language","buttons","md","general","borderRadiusBase","grey700","grey300","grey800","feedbackStyles","feedbackPrompt","feedbackOptions","Feedback","onFeedback","isVisible","setIsVisible","textSecondary","Typography","Text","color","FaceSmileIcon","FaceNeutralIcon","FaceFrownIcon","CloseIcon","messageStyles","display","flexDirection","gap","paddingTop","paddingRight","paddingBottom","paddingLeft","backgroundColor","borderBottom","Message","isActiveUser","backgroundSecondary","buttonStyles","checkIcon","MessageActionButton","props","showCheck","setShowCheck","handleClick","_props$onClick","call","Error","useEffect","timeoutId","setTimeout","clearTimeout","green500","_css","svg","transition","opacity","CheckIcon","MessageBody","getPrefixedClassName","typographyClassname","marginBottom","headerStyles","leftContent","rightContent","avatar","position","left","top","backgroundSize","backgroundPosition","width","height","borderRadius","MessageHeader","userName","avatarURL","backgroundImage","bold","paginationStyles","MessagePagination","onPrevious","onNext","current","total","actionDisabledText","cursor","ChevronLeftIcon","ChevronRightIcon","ChatUI","GenericContainerStyles","GenericSkeleton","label","frameRate","genSkeletonAnimatedColor","visuallyHidden","paragraphContainerStyles","paragraphFillStyles","ParagraphSkeleton","seed","offsetWidth","getOffsets","titleContainerStyles","titleFillStyles","TitleSkeleton","getRootStyles","Root","forwardRef","ref","RadixSlider","getTrackStyles","grey100","flexGrow","Track","getRangeStyles","primary","Range","getThumbStyles","actionPrimaryBackgroundDefault","boxShadow","grey400","outline","actionPrimaryBackgroundHover","actionPrimaryBackgroundPress","grey200","Thumb"],"mappings":"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"}